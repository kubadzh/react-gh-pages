[{"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js":"2","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"3","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"4","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"5","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"6","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"7","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"8","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"9","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"10","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"11","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"12","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"13","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"14","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"15","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js":"17","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js":"18","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js":"19","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js":"20","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js":"21","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js":"22","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js":"23","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js":"24","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js":"25"},{"size":717,"mtime":1609610014310,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1609610014360,"results":"28","hashOfConfig":"27"},{"size":572,"mtime":1610216286015,"results":"29","hashOfConfig":"27"},{"size":2114,"mtime":1610585637885,"results":"30","hashOfConfig":"27"},{"size":1492,"mtime":1610655038573,"results":"31","hashOfConfig":"27"},{"size":7856,"mtime":1610652181018,"results":"32","hashOfConfig":"27"},{"size":4101,"mtime":1610907254356,"results":"33","hashOfConfig":"27"},{"size":1936,"mtime":1609610014482,"results":"34","hashOfConfig":"27"},{"size":5294,"mtime":1610552517883,"results":"35","hashOfConfig":"27"},{"size":2003,"mtime":1610819261942,"results":"36","hashOfConfig":"27"},{"size":11195,"mtime":1610907376880,"results":"37","hashOfConfig":"27"},{"size":1054,"mtime":1609610014630,"results":"38","hashOfConfig":"39"},{"size":4243,"mtime":1609610014604,"results":"40","hashOfConfig":"39"},{"size":303,"mtime":1609610014654,"results":"41","hashOfConfig":"39"},{"size":5004,"mtime":1610911855599,"results":"42","hashOfConfig":"27"},{"size":824,"mtime":1610484297984,"results":"43","hashOfConfig":"27"},{"size":7133,"mtime":1611071230624,"results":"44","hashOfConfig":"27"},{"size":800,"mtime":1610643203257,"results":"45","hashOfConfig":"27"},{"size":634,"mtime":1610482941191,"results":"46","hashOfConfig":"27"},{"size":700,"mtime":1610585395078,"results":"47","hashOfConfig":"27"},{"size":861,"mtime":1610849860107,"results":"48","hashOfConfig":"27"},{"size":711,"mtime":1610818068494,"results":"49","hashOfConfig":"27"},{"size":243,"mtime":1610483073452,"results":"50","hashOfConfig":"27"},{"size":174,"mtime":1610484092334,"results":"51","hashOfConfig":"27"},{"size":48,"mtime":1610584373599,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"ornev4",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8q8auy",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],["109","110"],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["111","112","113"],"import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { LocalForm, Control, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\n\r\n\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      raiting: \"\",\r\n      author: \"\",\r\n      text: \"\",\r\n      touched: {\r\n        author: false,\r\n      },\r\n    };\r\n\r\n    this.openModal = this.openModal.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  validate(author) {\r\n    const errors = {\r\n      author: \"\",\r\n    };\r\n\r\n    if (this.state.touched.author) {\r\n      if (author.length < 2) {\r\n        errors.author = \"Your name must be at least 2 characters.\";\r\n      } else if (author.length > 15) {\r\n        errors.author = \"Your name must be 15 or less characters.\";\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  handleBlur = (field) => () => {\r\n    this.setState({\r\n      touched: { ...this.state.touched, [field]: true },\r\n    });\r\n  };\r\n\r\n  openModal = () => this.setState({ isOpen: true });\r\n  closeModal = () => this.setState({ isOpen: false });\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.openModal();\r\n    this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <Button\r\n            outline\r\n            color=\"secondary\"\r\n            className=\"fa-lg\"\r\n            onClick={this.openModal}\r\n          >\r\n            <i className=\"fa fa-pencil\" aria-hidden=\"true\">\r\n              Submit Comment\r\n            </i>\r\n          </Button>{\" \"}\r\n        </div>\r\n\r\n        <Modal isOpen={this.state.isOpen} toggle={this.openModal}>\r\n          <ModalHeader toggle={this.closeModal}>Submit Comment</ModalHeader>\r\n\r\n          <ModalBody>\r\n            <LocalForm onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"raiting\">Raiting</label>\r\n                <Control.select model=\".raiting\" id=\"raiting\" name=\"raiting\">\r\n                  <option value=\" \"></option>\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                </Control.select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"author\">Your Name</label>\r\n                <Control.text\r\n                  rows=\"6\"\r\n                  model=\".author\"\r\n                  id=\"author\"\r\n                  name=\"author\"\r\n                  className=\"form-control\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(2),\r\n                    maxLength: maxLength(15),\r\n                  }}\r\n                  onBlur={this.handleBlur(\"author\")}\r\n                  onChange={this.handleInputChange}\r\n                />\r\n\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".author\"\r\n                  show=\"touched\"\r\n                  component=\"div\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                    minLength: \"Must be at least 2 characters\",\r\n                    maxLength: \"Must be 15 characters or less\",\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Control.textarea\r\n                  model=\".text\"\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  rows=\"6\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Button color=\"primary\">Submit</Button>{\" \"}\r\n              </div>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction RenderCampsite({ campsite }) {\r\n  return (\r\n      <div className=\"col-md-5 m-1\">\r\n          <FadeTransform\r\n              in\r\n              transformProps={{\r\n                  exitTransform: 'scale(0.5) translateY(-50%)'\r\n              }}>\r\n              <Card>\r\n                  <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                  <CardBody>\r\n                      <CardText>{campsite.description}</CardText>\r\n                  </CardBody>\r\n              </Card>\r\n          </FadeTransform>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, campsiteId }) {\r\n  if (comments) {\r\n    return (\r\n      <div className=\"col-md-5 m-1\">\r\n        <h4>Comments</h4>\r\n                <Stagger in>\r\n                    {\r\n                        comments.map(comment => {\r\n                            return (\r\n                                <Fade in key={comment.id}>\r\n                                    <div>\r\n                                        <p>\r\n                                            {comment.text}<br />\r\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                        </p>\r\n                                    </div>\r\n                                </Fade>\r\n                            );\r\n                        })\r\n                    }\r\n                </Stagger>\r\n        <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  }\r\n  return <div />;\r\n}\r\n\r\nfunction CampsiteInfo(props) {\r\n  if (props.isLoading) {\r\n      return (\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <Loading />\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n\r\n  if (props.errMess) {\r\n      return (\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col\">\r\n                      <h4>{props.errMess}</h4>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n\r\n  if (props.campsite) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem>\r\n                <Link to=\"/directory\">Directory</Link>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <h2>{props.campsite.name}</h2>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderCampsite campsite={props.campsite} />\r\n          <RenderComments \r\n                        comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        campsiteId={props.campsite.id}\r\n                    />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <div />;\r\n}\r\n\r\nexport default CampsiteInfo;\r\n","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["114","115","116","117","118","119","120"],"import React, {Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content align-items-center\">\r\n\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            1 Nucamp Way<br />\r\n                            Seattle, WA 98001<br />\r\n                            U.S.A.\r\n                        </address>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                    \r\n                   \r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                <div className=\"col-md-10\">\r\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>   \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Contact;\r\n\r\n","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],["121","122"],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],["123","124"],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js",["125"],"import { CAMPSITES } from '../shared/campsites';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Campsites = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    campsites: []\r\n}, action) => {\r\nswitch (action.type) {\r\n    case ActionTypes.ADD_CAMPSITES:\r\n        return {...state, isLoading: false, errMess: null, campsites: action.payload};\r\n    case ActionTypes.CAMPSITES_LOADING:\r\n        return {...state, isLoading: true, errMess: null, campsites: []};\r\n    case ActionTypes.CAMPSITES_FAILED:\r\n        return {...state, isLoading: false, errMess: action.payload};\r\n    default:\r\n        return state;\r\n}\r\n};\r\n","C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js",[],"C:\\Users\\kubad\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":112,"column":17,"nodeType":"132","endLine":112,"endColumn":78},{"ruleId":"130","severity":1,"message":"133","line":124,"column":17,"nodeType":"132","endLine":137,"endColumn":19},{"ruleId":"130","severity":1,"message":"134","line":153,"column":17,"nodeType":"132","endLine":159,"endColumn":19},{"ruleId":"130","severity":1,"message":"133","line":94,"column":33,"nodeType":"132","endLine":102,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":119,"column":37,"nodeType":"132","endLine":127,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":144,"column":37,"nodeType":"132","endLine":153,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":171,"column":37,"nodeType":"132","endLine":178,"endColumn":39},{"ruleId":"130","severity":1,"message":"135","line":197,"column":45,"nodeType":"132","endLine":201,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":207,"column":37,"nodeType":"132","endLine":208,"endColumn":66},{"ruleId":"130","severity":1,"message":"134","line":217,"column":37,"nodeType":"132","endLine":220,"endColumn":39},{"ruleId":"126","replacedBy":"136"},{"ruleId":"128","replacedBy":"137"},{"ruleId":"126","replacedBy":"138"},{"ruleId":"128","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":19},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["144"],["145"],["144"],["145"],"no-unused-vars","'CAMPSITES' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]